swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: 
    name: Nickolas Ruppenthal
    email: nick.ruppenthal@gmail.com
  
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:9999
basePath: /
tags:
  - name: produto-controller
    description: Produto Controller
paths:
  /products:
    get:
      tags:
        - produto-controller
      summary: list
      operationId: listUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProdutoDto'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ExceptionResponse'
    post:
      tags:
        - produto-controller
      summary: create
      operationId: createUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: pForm
          description: pForm
          required: true
          schema:
            $ref: '#/definitions/ProdutoForm'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProdutoDto'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProdutoDto'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ExceptionResponse'
  /products/search:
    get:
      tags:
        - produto-controller
      summary: search
      operationId: searchUsingGET
      produces:
        - '*/*'
      parameters:
        - name: max_price
          in: query
          description: max_price
          required: false
          type: number
          format: double
        - name: min_price
          in: query
          description: min_price
          required: false
          type: number
          format: double
        - name: name
          in: query
          description: name
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProdutoDto'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ExceptionResponse'
  /products/{id}:
    get:
      tags:
        - produto-controller
      summary: findById
      operationId: findByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProdutoDto'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ExceptionResponse'
    put:
      tags:
        - produto-controller
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
        - in: body
          name: uForm
          description: uForm
          required: true
          schema:
            $ref: '#/definitions/UpdateForm'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProdutoDto'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProdutoDto'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ExceptionResponse'
    delete:
      tags:
        - produto-controller
      summary: delete
      operationId: deleteUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeleteDto'
        '204':
          description: No Content
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ExceptionResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ExceptionResponse'
definitions:
  DeleteDto:
    type: object
    properties:
      id:
        type: integer
        format: int32
      mensagem:
        type: string
    title: DeleteDto
  ProdutoDto:
    type: object
    properties:
      description:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
      price:
        type: number
        format: double
    title: ProdutoDto
  ProdutoForm:
    type: object
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
        format: double
    title: ProdutoForm
  UpdateForm:
    type: object
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
        format: double
    title: UpdateForm
  ExceptionResponse:
    type: object
    properties:
      status_code:
        type: integer
        format: int64
      message:
        type: string
    title: ExceptionResponse    
  
  
